---
import type { GetStaticPaths } from "astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { styled as p } from "panda/jsx";
import { contentStyle } from "@/lib/style";
import { rewriteHTML } from "@/lib/middlewares/rewrite-html";
import BackTo from "@/components/BackTo.astro";
import { formatDate } from "@/lib/consts";
import { getContentDetail, getContentList } from "@/lib/services/microcms";
import VisualMain from "@/components/VisualMain.astro";

export const getStaticPaths = (async () => {
  const worksList = await getContentList("works", { fields: "id" });

  return worksList.contents.map(({ id }) => ({
    params: { id },
  }));
}) satisfies GetStaticPaths;

const { id } = Astro.params;
const { title, visualMain, releaseDate, clientName, description, content } =
  await getContentDetail("works", id);

const modifiedContent = await rewriteHTML(content as string);
---

<BaseLayout
  seo={{
    title: `${title} | Works`,
    description,
  }}
>
  <p.div
    className="content"
    display="flex"
    flexDir="column"
    gap="5"
    pb="20"
    py="0"
  >
    <p.nav mdDown={{ ml: "calc(-1 * var(--spacing-5))" }} w="fit-content">
      <BackTo href="/works" txt="Works" />
    </p.nav>
    <p.div
      m="0 auto"
      maxH="60vh"
      style={{
        viewTransitionName: `works-${id}`,
      }}
      w="fit-content"
    >
      <VisualMain alt={title} url={visualMain} />
    </p.div>
    <p.h1
      color="9u-red1"
      fontSize={{ base: "4xl", mdDown: "3xl" }}
      fontWeight="bold"
      m="0 auto"
      textAlign="center"
      transform="translateY(5px)"
    >
      {title}
    </p.h1>
    <p.section m="0 auto" textAlign="center">
      <p.p>{formatDate(new Date(releaseDate), "YYYY.MM")}</p.p>
      {
        clientName != null && (
          <p.p fontSize="lg" fontWeight="bold">
            Client: {clientName}
          </p.p>
        )
      }
    </p.section>
    <p.section
      fontSize="lg"
      fontWeight="bold"
      m="0 auto"
      textAlign="center"
      w={{ base: "80%", mdDown: "100%" }}
    >
      {description}
    </p.section>
    <p.hr w="100%" />
  </p.div>
  <p.article className={contentStyle} set:html={modifiedContent} w="100%" />
</BaseLayout>
